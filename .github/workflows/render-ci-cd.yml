name: CI/CD Pipeline (Render + Node.js)

on:
  push:
    branches: [main, dev] # Deploy only these branches, no other branches

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: üì¶ Cache Node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: üì• Install dependencies
        run: npm ci

      - name: üß™ Run Lint & Tests
        run: |
          npm run lint
          npm test

      - name: üöÄ Deploy to Render (if tests pass)
        if: success()
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "Deploying to PRODUCTION..."
            curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
          elif [ "${{ github.ref_name }}" = "dev" ]; then
            echo "Deploying to STAGING..."
            curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
          else
            echo "No deploy for this branch."
          fi

      # ‚úÖ Notify on success
      - name: üéâ Notify success
        if: success()
        run: |
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.meta.outputs.tags }}' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Build Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Platforms:** linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Date:** $(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_STEP_SUMMARY
          echo "- **Git SHA:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Git Ref:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Usage" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY

      # ‚ùå Notify on failure + skip deploy (auto rollback trigger)
      - name: ‚ö†Ô∏è Notify failure / rollback
        if: failure()
        run: |
          echo "::error build failed - please check the build logs above for details"
          echo "::notice::Ensure your Dockerfile is properly configured and secrets are set correctly"
